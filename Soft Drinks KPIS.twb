<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.1011.0410                               -->
<workbook original-version='18.1' source-build='2023.1.7 (20231.23.1011.0410)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <BasicButtonObject />
    <CollapsiblePane />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <SpatialFileLayer />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Choose a metric' datatype='string' name='[ParÃ¡metro 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Revenue&quot;'>
        <calculation class='tableau' formula='&quot;Revenue&quot;' />
        <members>
          <member value='&quot;Revenue&quot;' />
          <member value='&quot;Profit&quot;' />
          <member value='&quot;Units Sold&quot;' />
          <member value='&quot;Cost of Goods&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='soft_drink_sales.csv+ (Varias conexiones)' inline='true' name='federated.11mepta12uz8ca1capwu207pmfhw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='soft_drink_sales' name='textscan.1a8nhgg14ytvag1em7i1g1id1n6g'>
            <connection class='textscan' directory='C:/Users/Valentina Rodriguez/Downloads' filename='soft_drink_sales.csv' password='' server='' />
          </named-connection>
          <named-connection caption='us_ak_hi_states_shift_conformal_faux_WM' name='ogrdirect.16u2ac11f2eixr14agwjs13r3m0n'>
            <connection class='ogrdirect' directory='C:/Users/Valentina Rodriguez/Downloads/states_and_counties_boom (1)/states_and_counties_boom' filename='us_ak_hi_states_shift_conformal_faux_WM.shp' password='' server='' tablename='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1a8nhgg14ytvag1em7i1g1id1n6g' name='soft_drink_sales.csv' table='[soft_drink_sales#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Product' ordinal='0' />
            <column datatype='string' name='Company' ordinal='1' />
            <column datatype='string' name='Category' ordinal='2' />
            <column datatype='integer' name='Units Sold' ordinal='3' />
            <column datatype='integer' name='Revenue' ordinal='4' />
            <column datatype='integer' name='Cost of Goods Sold' ordinal='5' />
            <column datatype='integer' name='Profit' ordinal='6' />
            <column datatype='date' name='Purchase Date' ordinal='7' />
            <column datatype='string' name='Customer Name' ordinal='8' />
            <column datatype='string' name='Customer State' ordinal='9' />
            <column datatype='string' name='Customer City' ordinal='10' />
            <column datatype='integer' name='Customer Zip Code' ordinal='11' />
            <column datatype='string' name='Order ID' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.1a8nhgg14ytvag1em7i1g1id1n6g' name='soft_drink_sales.csv' table='[soft_drink_sales#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Product' ordinal='0' />
              <column datatype='string' name='Company' ordinal='1' />
              <column datatype='string' name='Category' ordinal='2' />
              <column datatype='integer' name='Units Sold' ordinal='3' />
              <column datatype='integer' name='Revenue' ordinal='4' />
              <column datatype='integer' name='Cost of Goods Sold' ordinal='5' />
              <column datatype='integer' name='Profit' ordinal='6' />
              <column datatype='date' name='Purchase Date' ordinal='7' />
              <column datatype='string' name='Customer Name' ordinal='8' />
              <column datatype='string' name='Customer State' ordinal='9' />
              <column datatype='string' name='Customer City' ordinal='10' />
              <column datatype='integer' name='Customer Zip Code' ordinal='11' />
              <column datatype='string' name='Order ID' ordinal='12' />
            </columns>
          </relation>
          <relation connection='ogrdirect.16u2ac11f2eixr14agwjs13r3m0n' name='us_ak_hi_states_shift_conformal_faux_WM.shp' table='[us_ak_hi_states_shift_conformal_faux_WM.shp]' type='table'>
            <columns>
              <column datatype='string' name='STATEFP' ordinal='0' />
              <column datatype='string' name='Name' ordinal='1' />
              <column datatype='spatial' name='Geometry' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Product</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_894B93943C05492F9D55C18B08115348]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Company</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Company]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Company</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_894B93943C05492F9D55C18B08115348]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_894B93943C05492F9D55C18B08115348]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Units Sold</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Units Sold]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Units Sold</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_894B93943C05492F9D55C18B08115348]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Revenue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Revenue]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Revenue</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_894B93943C05492F9D55C18B08115348]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cost of Goods Sold</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cost of Goods Sold]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Cost of Goods Sold</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_894B93943C05492F9D55C18B08115348]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_894B93943C05492F9D55C18B08115348]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Purchase Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Purchase Date]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Purchase Date</remote-alias>
            <ordinal>7</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_894B93943C05492F9D55C18B08115348]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_894B93943C05492F9D55C18B08115348]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer State]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Customer State</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_894B93943C05492F9D55C18B08115348]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer City]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Customer City</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_894B93943C05492F9D55C18B08115348]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Zip Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Customer Zip Code]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Customer Zip Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_894B93943C05492F9D55C18B08115348]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_894B93943C05492F9D55C18B08115348]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATEFP</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATEFP]</local-name>
            <parent-name>[us_ak_hi_states_shift_conformal_faux_WM.shp]</parent-name>
            <remote-alias>STATEFP</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us_ak_hi_states_shift_conformal_faux_WM.shp_3061CD08867348F3B19FD2D52B020549]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[us_ak_hi_states_shift_conformal_faux_WM.shp]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us_ak_hi_states_shift_conformal_faux_WM.shp_3061CD08867348F3B19FD2D52B020549]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Geometry</remote-name>
            <remote-type>8</remote-type>
            <local-name>[Geometry]</local-name>
            <parent-name>[us_ak_hi_states_shift_conformal_faux_WM.shp]</parent-name>
            <remote-alias>Geometry</remote-alias>
            <ordinal>15</ordinal>
            <caption>GeometrÃ­a</caption>
            <local-type>spatial</local-type>
            <aggregation>Collect</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us_ak_hi_states_shift_conformal_faux_WM.shp_3061CD08867348F3B19FD2D52B020549]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Metric Selected' datatype='integer' name='[Calculation_183803201502547968]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[ParÃ¡metro 1]&#13;&#10;WHEN  &apos;Revenue&apos; THEN [Revenue]&#13;&#10;WHEN &apos;Profit&apos; THEN [Units Sold]&#13;&#10;WHEN &apos;Units Sold&apos; THEN [Units Sold]&#13;&#10;WHEN &apos;Cost of Goods&apos; THEN [Cost of Goods Sold]&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Customer City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Region' datatype='string' name='[Customer State (grupo)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[Customer State]' new-bin='true'>
          <bin default-name='false' value='&quot;Center&quot;'>
            <value>&quot;Illinois&quot;</value>
            <value>&quot;Indiana&quot;</value>
            <value>&quot;Iowa&quot;</value>
            <value>&quot;Kansas&quot;</value>
            <value>&quot;Kentucky&quot;</value>
            <value>&quot;Michigan&quot;</value>
            <value>&quot;Minnesota&quot;</value>
            <value>&quot;Missouri&quot;</value>
            <value>&quot;Nebraska&quot;</value>
            <value>&quot;North Dakota&quot;</value>
            <value>&quot;Ohio&quot;</value>
            <value>&quot;South Dakota&quot;</value>
            <value>&quot;Wisconsin&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;East&quot;'>
            <value>&quot;Connecticut&quot;</value>
            <value>&quot;Delaware&quot;</value>
            <value>&quot;Maine&quot;</value>
            <value>&quot;Maryland&quot;</value>
            <value>&quot;Massachusetts&quot;</value>
            <value>&quot;New Hampshire&quot;</value>
            <value>&quot;New Jersey&quot;</value>
            <value>&quot;New York&quot;</value>
            <value>&quot;Pennsylvania&quot;</value>
            <value>&quot;Rhode Island&quot;</value>
            <value>&quot;Vermont&quot;</value>
            <value>&quot;Virginia&quot;</value>
            <value>&quot;West Virginia&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;South&quot;'>
            <value>&quot;Alabama&quot;</value>
            <value>&quot;Arkansas&quot;</value>
            <value>&quot;Florida&quot;</value>
            <value>&quot;Georgia&quot;</value>
            <value>&quot;Louisiana&quot;</value>
            <value>&quot;Mississippi&quot;</value>
            <value>&quot;North Carolina&quot;</value>
            <value>&quot;Oklahoma&quot;</value>
            <value>&quot;South Carolina&quot;</value>
            <value>&quot;Tennessee&quot;</value>
            <value>&quot;Texas&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;West&quot;'>
            <value>&quot;Alaska&quot;</value>
            <value>&quot;Arizona&quot;</value>
            <value>&quot;California&quot;</value>
            <value>&quot;Colorado&quot;</value>
            <value>&quot;Hawaii&quot;</value>
            <value>&quot;Idaho&quot;</value>
            <value>&quot;Montana&quot;</value>
            <value>&quot;Nevada&quot;</value>
            <value>&quot;New Mexico&quot;</value>
            <value>&quot;Oregon&quot;</value>
            <value>&quot;Utah&quot;</value>
            <value>&quot;Washington&quot;</value>
            <value>&quot;Wyoming&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Customer State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Customer Zip Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column caption='GeometrÃ­a' datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
      <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
      <column caption='Statefp' datatype='string' name='[STATEFP]' role='dimension' type='nominal' />
      <column datatype='string' name='[State,Customer]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='soft_drink_sales.csv' datatype='table' name='[__tableau_internal_object_id__].[soft_drink_sales.csv_894B93943C05492F9D55C18B08115348]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='us_ak_hi_states_shift_conformal_faux_WM.shp' datatype='table' name='[__tableau_internal_object_id__].[us_ak_hi_states_shift_conformal_faux_WM.shp_3061CD08867348F3B19FD2D52B020549]' role='measure' type='quantitative' />
      <column-instance column='[Purchase Date]' derivation='Month-Trunc' name='[tmn:Purchase Date:ok]' pivot='key' type='ordinal' />
      <group caption='AcciÃ³n (Customer State)' hidden='true' name='[Action (Customer State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Customer State]' />
        </groupfilter>
      </group>
      <group caption='AcciÃ³n (MES(Purchase Date))' hidden='true' name='[Action (MONTH(Purchase Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:Purchase Date:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Customer State (grupo)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Center&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' type='shape' />
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Argentina&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column caption='Choose a metric' datatype='string' name='[ParÃ¡metro 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Revenue&quot;'>
          <calculation class='tableau' formula='&quot;Revenue&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='soft_drink_sales.csv' id='soft_drink_sales.csv_894B93943C05492F9D55C18B08115348'>
            <properties context=''>
              <relation connection='textscan.1a8nhgg14ytvag1em7i1g1id1n6g' name='soft_drink_sales.csv' table='[soft_drink_sales#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Product' ordinal='0' />
                  <column datatype='string' name='Company' ordinal='1' />
                  <column datatype='string' name='Category' ordinal='2' />
                  <column datatype='integer' name='Units Sold' ordinal='3' />
                  <column datatype='integer' name='Revenue' ordinal='4' />
                  <column datatype='integer' name='Cost of Goods Sold' ordinal='5' />
                  <column datatype='integer' name='Profit' ordinal='6' />
                  <column datatype='date' name='Purchase Date' ordinal='7' />
                  <column datatype='string' name='Customer Name' ordinal='8' />
                  <column datatype='string' name='Customer State' ordinal='9' />
                  <column datatype='string' name='Customer City' ordinal='10' />
                  <column datatype='integer' name='Customer Zip Code' ordinal='11' />
                  <column datatype='string' name='Order ID' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='us_ak_hi_states_shift_conformal_faux_WM.shp' id='us_ak_hi_states_shift_conformal_faux_WM.shp_3061CD08867348F3B19FD2D52B020549'>
            <properties context=''>
              <relation connection='ogrdirect.16u2ac11f2eixr14agwjs13r3m0n' name='us_ak_hi_states_shift_conformal_faux_WM.shp' table='[us_ak_hi_states_shift_conformal_faux_WM.shp]' type='table'>
                <columns>
                  <column datatype='string' name='STATEFP' ordinal='0' />
                  <column datatype='string' name='Name' ordinal='1' />
                  <column datatype='spatial' name='Geometry' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Customer State]' />
              <expression op='[Name]' />
            </expression>
            <first-end-point object-id='soft_drink_sales.csv_894B93943C05492F9D55C18B08115348' />
            <second-end-point object-id='us_ak_hi_states_shift_conformal_faux_WM.shp_3061CD08867348F3B19FD2D52B020549' unique-key='true' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.11mepta12uz8ca1capwu207pmfhw'>
      <datasources>
        <datasource caption='soft_drink_sales.csv+ (Varias conexiones)' name='federated.11mepta12uz8ca1capwu207pmfhw' />
      </datasources>
      <datasource-dependencies datasource='federated.11mepta12uz8ca1capwu207pmfhw'>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column datatype='string' name='[Company]' role='dimension' type='nominal' />
        <column caption='Region' datatype='string' name='[Customer State (grupo)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
          <calculation class='categorical-bin' column='[Customer State]' new-bin='true'>
            <bin default-name='false' value='&quot;Center&quot;'>
              <value>&quot;Illinois&quot;</value>
              <value>&quot;Indiana&quot;</value>
              <value>&quot;Iowa&quot;</value>
              <value>&quot;Kansas&quot;</value>
              <value>&quot;Kentucky&quot;</value>
              <value>&quot;Michigan&quot;</value>
              <value>&quot;Minnesota&quot;</value>
              <value>&quot;Missouri&quot;</value>
              <value>&quot;Nebraska&quot;</value>
              <value>&quot;North Dakota&quot;</value>
              <value>&quot;Ohio&quot;</value>
              <value>&quot;South Dakota&quot;</value>
              <value>&quot;Wisconsin&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;East&quot;'>
              <value>&quot;Connecticut&quot;</value>
              <value>&quot;Delaware&quot;</value>
              <value>&quot;Maine&quot;</value>
              <value>&quot;Maryland&quot;</value>
              <value>&quot;Massachusetts&quot;</value>
              <value>&quot;New Hampshire&quot;</value>
              <value>&quot;New Jersey&quot;</value>
              <value>&quot;New York&quot;</value>
              <value>&quot;Pennsylvania&quot;</value>
              <value>&quot;Rhode Island&quot;</value>
              <value>&quot;Vermont&quot;</value>
              <value>&quot;Virginia&quot;</value>
              <value>&quot;West Virginia&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;South&quot;'>
              <value>&quot;Alabama&quot;</value>
              <value>&quot;Arkansas&quot;</value>
              <value>&quot;Florida&quot;</value>
              <value>&quot;Georgia&quot;</value>
              <value>&quot;Louisiana&quot;</value>
              <value>&quot;Mississippi&quot;</value>
              <value>&quot;North Carolina&quot;</value>
              <value>&quot;Oklahoma&quot;</value>
              <value>&quot;South Carolina&quot;</value>
              <value>&quot;Tennessee&quot;</value>
              <value>&quot;Texas&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;West&quot;'>
              <value>&quot;Alaska&quot;</value>
              <value>&quot;Arizona&quot;</value>
              <value>&quot;California&quot;</value>
              <value>&quot;Colorado&quot;</value>
              <value>&quot;Hawaii&quot;</value>
              <value>&quot;Idaho&quot;</value>
              <value>&quot;Montana&quot;</value>
              <value>&quot;Nevada&quot;</value>
              <value>&quot;New Mexico&quot;</value>
              <value>&quot;Oregon&quot;</value>
              <value>&quot;Utah&quot;</value>
              <value>&quot;Washington&quot;</value>
              <value>&quot;Wyoming&quot;</value>
            </bin>
          </calculation>
        </column>
        <column datatype='string' name='[Customer State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[Company]' derivation='None' name='[none:Company:nk]' pivot='key' type='nominal' />
        <column-instance column='[Purchase Date]' derivation='Quarter-Trunc' name='[tqr:Purchase Date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.11mepta12uz8ca1capwu207pmfhw].[Customer State (grupo)]'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[Customer State (grupo)]' />
          <groupfilter function='union'>
            <groupfilter function='member' level='[Customer State (grupo)]' member='&quot;Center&quot;' />
            <groupfilter function='member' level='[Customer State (grupo)]' member='%null%' />
          </groupfilter>
        </groupfilter>
      </filter>
      <filter class='categorical' column='[federated.11mepta12uz8ca1capwu207pmfhw].[none:Category:nk]'>
        <groupfilter function='level-members' level='[none:Category:nk]' />
      </filter>
      <filter class='categorical' column='[federated.11mepta12uz8ca1capwu207pmfhw].[none:Company:nk]'>
        <groupfilter function='level-members' level='[none:Company:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='quantitative' column='[federated.11mepta12uz8ca1capwu207pmfhw].[tqr:Purchase Date:qk]' included-values='in-range'>
        <min>#2020-01-01 00:00:00#</min>
        <max>#2023-07-01 00:00:00#</max>
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filtro 1 (generado)' name='[Action1_289D9EF9A9AB41CFB927E9A560F1A3B1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filtro 2 (generado)' name='[Action2_6CA6DFA50B12432B841A844F9794D699]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Line Chart' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filtro 3 (generado)' name='[Action3_945B17B6B5B9417EBD12EA74A1493C48]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Customer' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filtro 4 (generado)' name='[Action4_5F98BAA5EF404140B15DD362881EB745]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Product' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Bands'>
      <table>
        <view>
          <datasources>
            <datasource caption='soft_drink_sales.csv+ (Varias conexiones)' name='federated.11mepta12uz8ca1capwu207pmfhw' />
          </datasources>
          <datasource-dependencies datasource='federated.11mepta12uz8ca1capwu207pmfhw'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Company]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Cost of Goods Sold]' role='measure' type='quantitative' />
            <column caption='Region' datatype='string' name='[Customer State (grupo)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Customer State]' new-bin='true'>
                <bin default-name='false' value='&quot;Center&quot;'>
                  <value>&quot;Illinois&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Iowa&quot;</value>
                  <value>&quot;Kansas&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;Minnesota&quot;</value>
                  <value>&quot;Missouri&quot;</value>
                  <value>&quot;Nebraska&quot;</value>
                  <value>&quot;North Dakota&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;South Dakota&quot;</value>
                  <value>&quot;Wisconsin&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                  <value>&quot;Texas&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Alaska&quot;</value>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Hawaii&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Washington&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Customer State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Units Sold]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Company]' derivation='None' name='[none:Company:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cost of Goods Sold]' derivation='Sum' name='[sum:Cost of Goods Sold:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Revenue]' derivation='Sum' name='[sum:Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Units Sold]' derivation='Sum' name='[sum:Units Sold:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Purchase Date]' derivation='Month-Trunc' name='[tmn:Purchase Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Purchase Date]' derivation='Quarter-Trunc' name='[tqr:Purchase Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11mepta12uz8ca1capwu207pmfhw].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11mepta12uz8ca1capwu207pmfhw].[sum:Revenue:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11mepta12uz8ca1capwu207pmfhw].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11mepta12uz8ca1capwu207pmfhw].[sum:Units Sold:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.11mepta12uz8ca1capwu207pmfhw].[sum:Cost of Goods Sold:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.11mepta12uz8ca1capwu207pmfhw].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.11mepta12uz8ca1capwu207pmfhw].[sum:Revenue:qk]&quot;</bucket>
              <bucket>&quot;[federated.11mepta12uz8ca1capwu207pmfhw].[sum:Profit:qk]&quot;</bucket>
              <bucket>&quot;[federated.11mepta12uz8ca1capwu207pmfhw].[sum:Units Sold:qk]&quot;</bucket>
              <bucket>&quot;[federated.11mepta12uz8ca1capwu207pmfhw].[sum:Cost of Goods Sold:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.11mepta12uz8ca1capwu207pmfhw].[Action (Customer State)]'>
            <groupfilter function='level-members' level='[Customer State]' user:ui-action-filter='[Action1_289D9EF9A9AB41CFB927E9A560F1A3B1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11mepta12uz8ca1capwu207pmfhw].[Action (MONTH(Purchase Date))]'>
            <groupfilter function='level-members' level='[tmn:Purchase Date:ok]' user:ui-action-filter='[Action2_6CA6DFA50B12432B841A844F9794D699]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.11mepta12uz8ca1capwu207pmfhw].[tqr:Purchase Date:qk]</column>
            <column>[federated.11mepta12uz8ca1capwu207pmfhw].[:Measure Names]</column>
            <column>[federated.11mepta12uz8ca1capwu207pmfhw].[none:Category:nk]</column>
            <column>[federated.11mepta12uz8ca1capwu207pmfhw].[none:Company:nk]</column>
            <column>[federated.11mepta12uz8ca1capwu207pmfhw].[Customer State (grupo)]</column>
            <column>[federated.11mepta12uz8ca1capwu207pmfhw].[Action (MONTH(Purchase Date))]</column>
            <column>[federated.11mepta12uz8ca1capwu207pmfhw].[Action (Customer State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' data-class='subtotal' value='center' />
            <format attr='vertical-align' data-class='subtotal' value='center' />
            <format attr='color' data-class='total' value='#ffffff' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='cols' value='#35009e' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.11mepta12uz8ca1capwu207pmfhw].[:Measure Names]' value='false' />
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
            <format attr='text-align' scope='cols' value='center' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#35009e' />
            <format attr='band-color' scope='rows' value='#35009e' />
            <format attr='background-color' data-class='total' value='#35009e' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='1' />
            <format attr='band-size' scope='rows' value='1' />
            <format attr='background-color' value='#35009e' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.11mepta12uz8ca1capwu207pmfhw].[Multiple Values]' />
              <text column='[federated.11mepta12uz8ca1capwu207pmfhw].[:Measure Names]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='18'><![CDATA[<[federated.11mepta12uz8ca1capwu207pmfhw].[Multiple Values]>]]></run>
                <run>Ã&#10;</run>
                <run fontsize='11'><![CDATA[<[federated.11mepta12uz8ca1capwu207pmfhw].[:Measure Names]>]]></run>
                <run>Ã&#10;&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.11mepta12uz8ca1capwu207pmfhw].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{226EDC48-E11F-4FBF-AFEA-55353CA682C6}' />
    </worksheet>
    <worksheet name='Customer'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;</run>
            <run fontalignment='1'>[Parameters].[ParÃ¡metro 1]</run>
            <run fontalignment='1'>&gt; by Customer</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='soft_drink_sales.csv+ (Varias conexiones)' name='federated.11mepta12uz8ca1capwu207pmfhw' />
            <datasource caption='ParÃ¡metros' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Choose a metric' datatype='string' name='[ParÃ¡metro 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Revenue&quot;'>
              <calculation class='tableau' formula='&quot;Revenue&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.11mepta12uz8ca1capwu207pmfhw'>
            <column caption='Metric Selected' datatype='integer' name='[Calculation_183803201502547968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[ParÃ¡metro 1]&#13;&#10;WHEN  &apos;Revenue&apos; THEN [Revenue]&#13;&#10;WHEN &apos;Profit&apos; THEN [Units Sold]&#13;&#10;WHEN &apos;Units Sold&apos; THEN [Units Sold]&#13;&#10;WHEN &apos;Cost of Goods&apos; THEN [Cost of Goods Sold]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Company]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Cost of Goods Sold]' role='measure' type='quantitative' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column caption='Region' datatype='string' name='[Customer State (grupo)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Customer State]' new-bin='true'>
                <bin default-name='false' value='&quot;Center&quot;'>
                  <value>&quot;Illinois&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Iowa&quot;</value>
                  <value>&quot;Kansas&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;Minnesota&quot;</value>
                  <value>&quot;Missouri&quot;</value>
                  <value>&quot;Nebraska&quot;</value>
                  <value>&quot;North Dakota&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;South Dakota&quot;</value>
                  <value>&quot;Wisconsin&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                  <value>&quot;Texas&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Alaska&quot;</value>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Hawaii&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Washington&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Customer State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Units Sold]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Company]' derivation='None' name='[none:Company:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_183803201502547968]' derivation='Sum' name='[sum:Calculation_183803201502547968:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Purchase Date]' derivation='Month-Trunc' name='[tmn:Purchase Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Purchase Date]' derivation='Quarter-Trunc' name='[tqr:Purchase Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11mepta12uz8ca1capwu207pmfhw].[Action (Customer State)]'>
            <groupfilter function='level-members' level='[Customer State]' user:ui-action-filter='[Action1_289D9EF9A9AB41CFB927E9A560F1A3B1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11mepta12uz8ca1capwu207pmfhw].[Action (MONTH(Purchase Date))]'>
            <groupfilter function='level-members' level='[tmn:Purchase Date:ok]' user:ui-action-filter='[Action2_6CA6DFA50B12432B841A844F9794D699]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.11mepta12uz8ca1capwu207pmfhw].[none:Customer Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.11mepta12uz8ca1capwu207pmfhw].[sum:Calculation_183803201502547968:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.11mepta12uz8ca1capwu207pmfhw].[tqr:Purchase Date:qk]</column>
            <column>[federated.11mepta12uz8ca1capwu207pmfhw].[none:Category:nk]</column>
            <column>[federated.11mepta12uz8ca1capwu207pmfhw].[none:Company:nk]</column>
            <column>[federated.11mepta12uz8ca1capwu207pmfhw].[Customer State (grupo)]</column>
            <column>[federated.11mepta12uz8ca1capwu207pmfhw].[Action (MONTH(Purchase Date))]</column>
            <column>[federated.11mepta12uz8ca1capwu207pmfhw].[Action (Customer State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.11mepta12uz8ca1capwu207pmfhw].[sum:Calculation_183803201502547968:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.11mepta12uz8ca1capwu207pmfhw].[none:Customer Name:nk]</rows>
        <cols>[federated.11mepta12uz8ca1capwu207pmfhw].[sum:Calculation_183803201502547968:qk]</cols>
      </table>
      <simple-id uuid='{2508E40C-8086-4348-8C42-1D999BF58420}' />
    </worksheet>
    <worksheet name='Hoja 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='soft_drink_sales.csv+ (Varias conexiones)' name='federated.11mepta12uz8ca1capwu207pmfhw' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.11mepta12uz8ca1capwu207pmfhw'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Company]' role='dimension' type='nominal' />
            <column caption='Region' datatype='string' name='[Customer State (grupo)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Customer State]' new-bin='true'>
                <bin default-name='false' value='&quot;Center&quot;'>
                  <value>&quot;Illinois&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Iowa&quot;</value>
                  <value>&quot;Kansas&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;Minnesota&quot;</value>
                  <value>&quot;Missouri&quot;</value>
                  <value>&quot;Nebraska&quot;</value>
                  <value>&quot;North Dakota&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;South Dakota&quot;</value>
                  <value>&quot;Wisconsin&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                  <value>&quot;Texas&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Alaska&quot;</value>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Hawaii&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Washington&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Customer State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='GeometrÃ­a' datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Company]' derivation='None' name='[none:Company:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer State]' derivation='None' name='[none:Customer State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Purchase Date]' derivation='Quarter-Trunc' name='[tqr:Purchase Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.11mepta12uz8ca1capwu207pmfhw].[tqr:Purchase Date:qk]</column>
            <column>[federated.11mepta12uz8ca1capwu207pmfhw].[none:Category:nk]</column>
            <column>[federated.11mepta12uz8ca1capwu207pmfhw].[none:Company:nk]</column>
            <column>[federated.11mepta12uz8ca1capwu207pmfhw].[Customer State (grupo)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.11mepta12uz8ca1capwu207pmfhw].[Longitude (generated)]' field-type='quantitative' max='3447992.0067440057' min='-170678.57629376603' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.11mepta12uz8ca1capwu207pmfhw].[Latitude (generated)]' field-type='quantitative' max='1056517.6831381856' min='-2210624.8350813608' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.11mepta12uz8ca1capwu207pmfhw].[clct:Geometry:nk]' />
              <lod column='[federated.11mepta12uz8ca1capwu207pmfhw].[none:Customer State:nk]' />
              <geometry column='[federated.11mepta12uz8ca1capwu207pmfhw].[clct:Geometry:nk]' />
              <color column='[federated.11mepta12uz8ca1capwu207pmfhw].[Customer State (grupo)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.11mepta12uz8ca1capwu207pmfhw].[Latitude (generated)]</rows>
        <cols>[federated.11mepta12uz8ca1capwu207pmfhw].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{61DB06A8-A4D7-4C17-949C-C59DE4E654ED}' />
    </worksheet>
    <worksheet name='Line Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[Parameters].[ParÃ¡metro 1]</run>
            <run>&gt; by Month&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='soft_drink_sales.csv+ (Varias conexiones)' name='federated.11mepta12uz8ca1capwu207pmfhw' />
            <datasource caption='ParÃ¡metros' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Choose a metric' datatype='string' name='[ParÃ¡metro 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Revenue&quot;'>
              <calculation class='tableau' formula='&quot;Revenue&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.11mepta12uz8ca1capwu207pmfhw'>
            <column caption='Metric Selected' datatype='integer' name='[Calculation_183803201502547968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[ParÃ¡metro 1]&#13;&#10;WHEN  &apos;Revenue&apos; THEN [Revenue]&#13;&#10;WHEN &apos;Profit&apos; THEN [Units Sold]&#13;&#10;WHEN &apos;Units Sold&apos; THEN [Units Sold]&#13;&#10;WHEN &apos;Cost of Goods&apos; THEN [Cost of Goods Sold]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Company]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Cost of Goods Sold]' role='measure' type='quantitative' />
            <column caption='Region' datatype='string' name='[Customer State (grupo)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Customer State]' new-bin='true'>
                <bin default-name='false' value='&quot;Center&quot;'>
                  <value>&quot;Illinois&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Iowa&quot;</value>
                  <value>&quot;Kansas&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;Minnesota&quot;</value>
                  <value>&quot;Missouri&quot;</value>
                  <value>&quot;Nebraska&quot;</value>
                  <value>&quot;North Dakota&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;South Dakota&quot;</value>
                  <value>&quot;Wisconsin&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                  <value>&quot;Texas&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Alaska&quot;</value>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Hawaii&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Washington&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Customer State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Units Sold]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Company]' derivation='None' name='[none:Company:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_183803201502547968]' derivation='Sum' name='[sum:Calculation_183803201502547968:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Purchase Date]' derivation='Month-Trunc' name='[tmn:Purchase Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Purchase Date]' derivation='Quarter-Trunc' name='[tqr:Purchase Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11mepta12uz8ca1capwu207pmfhw].[Action (Customer State)]'>
            <groupfilter function='level-members' level='[Customer State]' user:ui-action-filter='[Action1_289D9EF9A9AB41CFB927E9A560F1A3B1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.11mepta12uz8ca1capwu207pmfhw].[Customer State (grupo)]</column>
            <column>[federated.11mepta12uz8ca1capwu207pmfhw].[none:Category:nk]</column>
            <column>[federated.11mepta12uz8ca1capwu207pmfhw].[none:Company:nk]</column>
            <column>[federated.11mepta12uz8ca1capwu207pmfhw].[tqr:Purchase Date:qk]</column>
            <column>[federated.11mepta12uz8ca1capwu207pmfhw].[Action (Customer State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.11mepta12uz8ca1capwu207pmfhw].[sum:Calculation_183803201502547968:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.11mepta12uz8ca1capwu207pmfhw].[tmn:Purchase Date:qk]' scope='cols' value='' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.11mepta12uz8ca1capwu207pmfhw].[sum:Calculation_183803201502547968:qk]</rows>
        <cols>[federated.11mepta12uz8ca1capwu207pmfhw].[tmn:Purchase Date:qk]</cols>
      </table>
      <simple-id uuid='{1757A7BF-C609-49F6-A6C0-3E10184EA720}' />
    </worksheet>
    <worksheet name='Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;</run>
            <run fontalignment='1'>[Parameters].[ParÃ¡metro 1]</run>
            <run fontalignment='1'>&gt; by State</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='soft_drink_sales.csv+ (Varias conexiones)' name='federated.11mepta12uz8ca1capwu207pmfhw' />
            <datasource caption='ParÃ¡metros' name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Choose a metric' datatype='string' name='[ParÃ¡metro 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Revenue&quot;'>
              <calculation class='tableau' formula='&quot;Revenue&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.11mepta12uz8ca1capwu207pmfhw'>
            <column caption='Metric Selected' datatype='integer' name='[Calculation_183803201502547968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[ParÃ¡metro 1]&#13;&#10;WHEN  &apos;Revenue&apos; THEN [Revenue]&#13;&#10;WHEN &apos;Profit&apos; THEN [Units Sold]&#13;&#10;WHEN &apos;Units Sold&apos; THEN [Units Sold]&#13;&#10;WHEN &apos;Cost of Goods&apos; THEN [Cost of Goods Sold]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Company]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Cost of Goods Sold]' role='measure' type='quantitative' />
            <column caption='Region' datatype='string' name='[Customer State (grupo)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Customer State]' new-bin='true'>
                <bin default-name='false' value='&quot;Center&quot;'>
                  <value>&quot;Illinois&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Iowa&quot;</value>
                  <value>&quot;Kansas&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;Minnesota&quot;</value>
                  <value>&quot;Missouri&quot;</value>
                  <value>&quot;Nebraska&quot;</value>
                  <value>&quot;North Dakota&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;South Dakota&quot;</value>
                  <value>&quot;Wisconsin&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                  <value>&quot;Texas&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Alaska&quot;</value>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Hawaii&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Washington&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Customer State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='GeometrÃ­a' datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Units Sold]' role='measure' type='quantitative' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Company]' derivation='None' name='[none:Company:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer State]' derivation='None' name='[none:Customer State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_183803201502547968]' derivation='Sum' name='[sum:Calculation_183803201502547968:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Purchase Date]' derivation='Month-Trunc' name='[tmn:Purchase Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Purchase Date]' derivation='Quarter-Trunc' name='[tqr:Purchase Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11mepta12uz8ca1capwu207pmfhw].[Action (MONTH(Purchase Date))]'>
            <groupfilter function='level-members' level='[tmn:Purchase Date:ok]' user:ui-action-filter='[Action2_6CA6DFA50B12432B841A844F9794D699]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.11mepta12uz8ca1capwu207pmfhw].[tqr:Purchase Date:qk]</column>
            <column>[federated.11mepta12uz8ca1capwu207pmfhw].[none:Category:nk]</column>
            <column>[federated.11mepta12uz8ca1capwu207pmfhw].[none:Company:nk]</column>
            <column>[federated.11mepta12uz8ca1capwu207pmfhw].[Customer State (grupo)]</column>
            <column>[federated.11mepta12uz8ca1capwu207pmfhw].[Action (MONTH(Purchase Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.11mepta12uz8ca1capwu207pmfhw].[Longitude (generated)]' field-type='quantitative' max='4698244.584324657' min='-4155760.1916682245' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.11mepta12uz8ca1capwu207pmfhw].[Latitude (generated)]' field-type='quantitative' max='1488477.2217613021' min='-2746046.8474300606' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='1' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.11mepta12uz8ca1capwu207pmfhw].[tqr:Purchase Date:qk]' value='Quarter&#10;'>
              <formatted-text>
                <run>Quarter&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11mepta12uz8ca1capwu207pmfhw].[sum:Calculation_183803201502547968:qk]' />
              <lod column='[federated.11mepta12uz8ca1capwu207pmfhw].[clct:Geometry:nk]' />
              <lod column='[federated.11mepta12uz8ca1capwu207pmfhw].[none:Customer State:nk]' />
              <geometry column='[federated.11mepta12uz8ca1capwu207pmfhw].[clct:Geometry:nk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.11mepta12uz8ca1capwu207pmfhw].[none:Customer State:nk]>]]></run>
                <run>Ã&#10;</run>
                <run fontcolor='#787878'><![CDATA[Metric Selected:<[Parameters].[ParÃ¡metro 1]>	]]></run>
                <run bold='true'><![CDATA[<[federated.11mepta12uz8ca1capwu207pmfhw].[sum:Calculation_183803201502547968:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.11mepta12uz8ca1capwu207pmfhw].[Latitude (generated)]</rows>
        <cols>[federated.11mepta12uz8ca1capwu207pmfhw].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{AF3C15F0-0ADE-485A-A19B-BF4520A06910}' />
    </worksheet>
    <worksheet name='Product'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;</run>
            <run fontalignment='1'>[Parameters].[ParÃ¡metro 1]</run>
            <run fontalignment='1'>&gt; by Product</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='soft_drink_sales.csv+ (Varias conexiones)' name='federated.11mepta12uz8ca1capwu207pmfhw' />
            <datasource caption='ParÃ¡metros' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Choose a metric' datatype='string' name='[ParÃ¡metro 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Revenue&quot;'>
              <calculation class='tableau' formula='&quot;Revenue&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.11mepta12uz8ca1capwu207pmfhw'>
            <column caption='Metric Selected' datatype='integer' name='[Calculation_183803201502547968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[ParÃ¡metro 1]&#13;&#10;WHEN  &apos;Revenue&apos; THEN [Revenue]&#13;&#10;WHEN &apos;Profit&apos; THEN [Units Sold]&#13;&#10;WHEN &apos;Units Sold&apos; THEN [Units Sold]&#13;&#10;WHEN &apos;Cost of Goods&apos; THEN [Cost of Goods Sold]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Company]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Cost of Goods Sold]' role='measure' type='quantitative' />
            <column caption='Region' datatype='string' name='[Customer State (grupo)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Customer State]' new-bin='true'>
                <bin default-name='false' value='&quot;Center&quot;'>
                  <value>&quot;Illinois&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Iowa&quot;</value>
                  <value>&quot;Kansas&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;Minnesota&quot;</value>
                  <value>&quot;Missouri&quot;</value>
                  <value>&quot;Nebraska&quot;</value>
                  <value>&quot;North Dakota&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;South Dakota&quot;</value>
                  <value>&quot;Wisconsin&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                  <value>&quot;Texas&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Alaska&quot;</value>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Hawaii&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Washington&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Customer State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Units Sold]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Company]' derivation='None' name='[none:Company:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_183803201502547968]' derivation='Sum' name='[sum:Calculation_183803201502547968:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Purchase Date]' derivation='Month-Trunc' name='[tmn:Purchase Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Purchase Date]' derivation='Quarter-Trunc' name='[tqr:Purchase Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11mepta12uz8ca1capwu207pmfhw].[Action (Customer State)]'>
            <groupfilter function='level-members' level='[Customer State]' user:ui-action-filter='[Action1_289D9EF9A9AB41CFB927E9A560F1A3B1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11mepta12uz8ca1capwu207pmfhw].[Action (MONTH(Purchase Date))]'>
            <groupfilter function='level-members' level='[tmn:Purchase Date:ok]' user:ui-action-filter='[Action2_6CA6DFA50B12432B841A844F9794D699]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.11mepta12uz8ca1capwu207pmfhw].[none:Product:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.11mepta12uz8ca1capwu207pmfhw].[sum:Calculation_183803201502547968:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.11mepta12uz8ca1capwu207pmfhw].[tqr:Purchase Date:qk]</column>
            <column>[federated.11mepta12uz8ca1capwu207pmfhw].[none:Category:nk]</column>
            <column>[federated.11mepta12uz8ca1capwu207pmfhw].[none:Company:nk]</column>
            <column>[federated.11mepta12uz8ca1capwu207pmfhw].[Customer State (grupo)]</column>
            <column>[federated.11mepta12uz8ca1capwu207pmfhw].[Action (MONTH(Purchase Date))]</column>
            <column>[federated.11mepta12uz8ca1capwu207pmfhw].[Action (Customer State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.11mepta12uz8ca1capwu207pmfhw].[sum:Calculation_183803201502547968:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.11mepta12uz8ca1capwu207pmfhw].[none:Product:nk]</rows>
        <cols>[federated.11mepta12uz8ca1capwu207pmfhw].[sum:Calculation_183803201502547968:qk]</cols>
      </table>
      <simple-id uuid='{5B6BCE19-549A-49F2-BE10-09ED0AFBD673}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1300' minheight='800' minwidth='1300' sizing-mode='fixed' />
      <datasources>
        <datasource caption='ParÃ¡metros' name='Parameters' />
        <datasource caption='soft_drink_sales.csv+ (Varias conexiones)' name='federated.11mepta12uz8ca1capwu207pmfhw' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Choose a metric' datatype='string' name='[ParÃ¡metro 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Revenue&quot;'>
          <calculation class='tableau' formula='&quot;Revenue&quot;' />
          <members>
            <member value='&quot;Revenue&quot;' />
            <member value='&quot;Profit&quot;' />
            <member value='&quot;Units Sold&quot;' />
            <member value='&quot;Cost of Goods&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.11mepta12uz8ca1capwu207pmfhw'>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column datatype='string' name='[Company]' role='dimension' type='nominal' />
        <column caption='Region' datatype='string' name='[Customer State (grupo)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
          <calculation class='categorical-bin' column='[Customer State]' new-bin='true'>
            <bin default-name='false' value='&quot;Center&quot;'>
              <value>&quot;Illinois&quot;</value>
              <value>&quot;Indiana&quot;</value>
              <value>&quot;Iowa&quot;</value>
              <value>&quot;Kansas&quot;</value>
              <value>&quot;Kentucky&quot;</value>
              <value>&quot;Michigan&quot;</value>
              <value>&quot;Minnesota&quot;</value>
              <value>&quot;Missouri&quot;</value>
              <value>&quot;Nebraska&quot;</value>
              <value>&quot;North Dakota&quot;</value>
              <value>&quot;Ohio&quot;</value>
              <value>&quot;South Dakota&quot;</value>
              <value>&quot;Wisconsin&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;East&quot;'>
              <value>&quot;Connecticut&quot;</value>
              <value>&quot;Delaware&quot;</value>
              <value>&quot;Maine&quot;</value>
              <value>&quot;Maryland&quot;</value>
              <value>&quot;Massachusetts&quot;</value>
              <value>&quot;New Hampshire&quot;</value>
              <value>&quot;New Jersey&quot;</value>
              <value>&quot;New York&quot;</value>
              <value>&quot;Pennsylvania&quot;</value>
              <value>&quot;Rhode Island&quot;</value>
              <value>&quot;Vermont&quot;</value>
              <value>&quot;Virginia&quot;</value>
              <value>&quot;West Virginia&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;South&quot;'>
              <value>&quot;Alabama&quot;</value>
              <value>&quot;Arkansas&quot;</value>
              <value>&quot;Florida&quot;</value>
              <value>&quot;Georgia&quot;</value>
              <value>&quot;Louisiana&quot;</value>
              <value>&quot;Mississippi&quot;</value>
              <value>&quot;North Carolina&quot;</value>
              <value>&quot;Oklahoma&quot;</value>
              <value>&quot;South Carolina&quot;</value>
              <value>&quot;Tennessee&quot;</value>
              <value>&quot;Texas&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;West&quot;'>
              <value>&quot;Alaska&quot;</value>
              <value>&quot;Arizona&quot;</value>
              <value>&quot;California&quot;</value>
              <value>&quot;Colorado&quot;</value>
              <value>&quot;Hawaii&quot;</value>
              <value>&quot;Idaho&quot;</value>
              <value>&quot;Montana&quot;</value>
              <value>&quot;Nevada&quot;</value>
              <value>&quot;New Mexico&quot;</value>
              <value>&quot;Oregon&quot;</value>
              <value>&quot;Utah&quot;</value>
              <value>&quot;Washington&quot;</value>
              <value>&quot;Wyoming&quot;</value>
            </bin>
          </calculation>
        </column>
        <column datatype='string' name='[Customer State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[Company]' derivation='None' name='[none:Company:nk]' pivot='key' type='nominal' />
        <column-instance column='[Purchase Date]' derivation='Quarter-Trunc' name='[tqr:Purchase Date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='33' param='horz' type-v2='layout-flow' w='98770' x='615' y='1000'>
            <zone h='98000' id='26' param='horz' type-v2='layout-flow' w='98770' x='615' y='1000'>
              <zone h='98000' id='1' param='vert' type-v2='layout-flow' w='98770' x='615' y='1000'>
                <zone h='14250' id='4' param='horz' type-v2='layout-flow' w='98770' x='615' y='1000'>
                  <zone h='14250' id='5' param='horz' type-v2='layout-flow' w='98770' x='615' y='1000'>
                    <zone forceUpdate='true' h='14250' id='6' type-v2='text' w='26232' x='615' y='1000'>
                      <formatted-text>
                        <run bold='true' fontcolor='#ffffff' fontsize='19'>KPI Dashboard</run>
                      </formatted-text>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                        <format attr='background-color' value='#35009e' />
                      </zone-style>
                    </zone>
                    <zone fixed-size='935' h='14250' id='7' is-fixed='true' name='Bands' show-title='false' w='72538' x='26847' y='1000'>
                      <layout-cache fixed-size-h='106' type-h='fixed' type-w='fixed' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                        <format attr='background-color' value='#35009e' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
                <zone h='83750' id='27' param='horz' type-v2='layout-flow' w='98770' x='615' y='15250'>
                  <zone h='83750' id='30' param='vert' type-v2='layout-flow' w='41347' x='615' y='15250'>
                    <zone h='48750' id='31' name='Map' w='41347' x='615' y='15250'>
                      <layout-cache minheight='258' minwidth='202' type-h='scalable' type-w='scalable' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone fixed-size='272' h='35000' id='39' is-fixed='true' name='Customer' w='41347' x='615' y='64000'>
                      <layout-cache minwidth='260' type-h='fixed' type-w='scalable' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                  <zone h='83750' id='40' param='vert' type-v2='layout-flow' w='38270' x='41962' y='15250'>
                    <zone h='46625' id='41' name='Line Chart' w='38270' x='41962' y='15250'>
                      <layout-cache minheight='189' minwidth='162' type-h='scalable' type-w='scalable' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='37125' id='42' name='Product' w='38270' x='41962' y='61875'>
                      <layout-cache fixed-size-h='289' minwidth='220' type-h='fixed' type-w='scalable' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                  <zone fixed-size='24' h='83750' id='28' is-fixed='true' type-v2='empty' w='2461' x='80232' y='15250'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='209' h='83750' id='32' is-fixed='true' param='vert' type-v2='layout-flow' w='16692' x='82693' y='15250'>
                    <zone h='11125' id='37' name='Map' param='[federated.11mepta12uz8ca1capwu207pmfhw].[tqr:Purchase Date:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='16076' x='83001' y='15750'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='10' />
                      </zone-style>
                    </zone>
                    <zone h='17906' id='38' mode='list' param='[Parameters].[ParÃ¡metro 1]' type-v2='paramctrl' w='16076' x='83001' y='26875'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='10' />
                      </zone-style>
                    </zone>
                    <zone h='17906' id='34' name='Map' param='[federated.11mepta12uz8ca1capwu207pmfhw].[Customer State (grupo)]' type-v2='filter' w='16076' x='83001' y='44781'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='10' />
                      </zone-style>
                    </zone>
                    <zone h='17906' id='35' name='Map' param='[federated.11mepta12uz8ca1capwu207pmfhw].[none:Category:nk]' type-v2='filter' w='16076' x='83001' y='62687'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='10' />
                      </zone-style>
                    </zone>
                    <zone h='17907' id='36' name='Map' param='[federated.11mepta12uz8ca1capwu207pmfhw].[none:Company:nk]' type-v2='filter' w='16076' x='83001' y='80593'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='10' />
                      </zone-style>
                    </zone>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='3000' id='21' type-v2='dashboard-object' w='1846' x='0' y='2500'>
          <button action=''>
            <toggle-action>tabdoc:toggle-button-click-action window-id=&quot;{01AA9CBD-28AB-4322-B304-1CCE6E5C921E}&quot; zone-id=&quot;21&quot; zone-ids=[1]</toggle-action>
            <button-visual-state />
            <button-visual-state />
          </button>
        </zone>
      </zones>
      <simple-id uuid='{53AD1FCA-77F6-4638-A4DB-2022483FC812}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' show-side-pane='false' source-height='44'>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.11mepta12uz8ca1capwu207pmfhw].[Customer State (grupo)]' type='filter' />
            <card param='[federated.11mepta12uz8ca1capwu207pmfhw].[none:Category:nk]' type='filter' />
            <card param='[federated.11mepta12uz8ca1capwu207pmfhw].[none:Company:nk]' type='filter' />
            <card param='[federated.11mepta12uz8ca1capwu207pmfhw].[tqr:Purchase Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='list' param='[Parameters].[ParÃ¡metro 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11mepta12uz8ca1capwu207pmfhw].[mn:Purchase Date:ok]</field>
            <field>[federated.11mepta12uz8ca1capwu207pmfhw].[none:Category:nk]</field>
            <field>[federated.11mepta12uz8ca1capwu207pmfhw].[none:Customer State:nk]</field>
            <field>[federated.11mepta12uz8ca1capwu207pmfhw].[none:State,Customer:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{350291CC-62B6-4608-BD48-4DEDA4B28A37}' />
    </window>
    <window class='worksheet' name='Hoja 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='0' param='[federated.11mepta12uz8ca1capwu207pmfhw].[Customer State (grupo)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11mepta12uz8ca1capwu207pmfhw].[none:Customer State:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='8' />
      </viewpoint>
      <simple-id uuid='{4D5921AD-B0DE-43B0-90C0-D64F1D3FB047}' />
    </window>
    <window class='worksheet' name='Bands'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11mepta12uz8ca1capwu207pmfhw].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8A709631-C891-424E-B26B-BFDB9E9E8EB3}' />
    </window>
    <window class='worksheet' name='Product'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11mepta12uz8ca1capwu207pmfhw].[none:Product:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E51EC1A0-5D9C-4D3F-AE3B-70CA0CBF942B}' />
    </window>
    <window class='worksheet' name='Customer'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11mepta12uz8ca1capwu207pmfhw].[none:Customer Name:nk]</field>
            <field>[federated.11mepta12uz8ca1capwu207pmfhw].[none:Product:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{801409B3-183E-4D3E-9D19-DCEFDA9C381D}' />
    </window>
    <window class='worksheet' name='Line Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.11mepta12uz8ca1capwu207pmfhw].[tmn:Purchase Date:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.11mepta12uz8ca1capwu207pmfhw].[yr:Purchase Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C4330D6A-38BE-4D58-8028-538FD9F3A003}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Bands' />
        <viewpoint name='Customer' />
        <viewpoint name='Line Chart'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Product' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{01AA9CBD-28AB-4322-B304-1CCE6E5C921E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='110' name='Bands' width='192'>
      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
      4ODgHkuUjxo1CkKhEHFxcYPavsjDwwMpKSkoKSmBg4MD6urqUFxcjC1btrCExuPxoKuriyNH
      jsDT01PteyF9AIJa+Pn54eDBg0hJSUF0dDSzebcSU1NTUBSFBw8eDMqupaUlbGxsIBKJQNM0
      bty4AR6P12N7Jz6fDxMTExQXF2t0H0QABLXx9PREREQEMjIyEB4ejra2NuYzY2Nj2NraIiUl
      pdcNCtva2tDc3Mw6R1EUfH19UVxcjOrqamRmZmLRokU9XBnlvs5isbjXsQOapvvd7JwIgKAR
      Li4uCA8Px/Xr1xEWFobW1lYAndGW4OBgNDc3s7Y6AjojRBcuXMCyZcuQm5vbw+bcuXPB4/Fw
      8eJFVFRU9LpB34oVK2Bubo6QkBBkZWWhvb0dQOdWVhkZGXjvvfeQmpraZ/5JH4CgMS4uLjh6
      9Ch27tyJjz/+GIcOHYKhoSEsLS2RkJCAuLg4bNu2jamNx40bB0dHRxw/flzlNGqBQABXV1ec
      PHkS7u7usLCwUJmuQCDA8ePHcf78eXz22WeoqakBTdPg8/mwt7fH7t27YWdn12feyQYZBE5D
      XCACpyECIHAaIgACpyECIHAaIgACpyECIHAaIgACpyECIHAaIgACpyECIHAaIgACpyECIHAa
      IgACpyECIHAaIgACpyECIHAaIgACpyECIHAaIgACpyECIHAaIgACpyECIHAaIgACpyECIHAa
      IgACpyECIHAaIgACpyECIHAaIgACp/k/IjmQz1hH5pUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Customer' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      wRgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Hoja 2' width='192'>
      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
      DfB+d58SAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Line Chart' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Product' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
